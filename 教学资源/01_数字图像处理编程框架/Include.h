// Include.h: interface for the included structures.
//
//////////////////////////////////////////////////////////////////////////
#if !defined(AFX_INCLUDE_H__E203256A_464F_4DD4_A7EF_DEE13B65543A__INCLUDED_)
#define AFX_INCLUDE_H__E203256A_464F_4DD4_A7EF_DEE13B65543A__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

// [ ******************************************************************* ]
// [ ************* << BlackWhite 表示黑白图像的两种颜色 >> ************* ]
// [ ************* << Black 表示黑点     White 表示白点 >> ************* ]
// [ ******************************************************************* ]

enum BlackWhite
{ 
	Black = 0x00000000, // [ 黑点 ]
	White = 0x00FFFFFF  // [ 白点 ]
};

// [ ******************************************************************* ]
// [ *********************** << RGB 颜色空间 >> ************************ ]
// [ ******************************************************************* ]

struct RGB_TRIPLE
{
	// [ ******** ] ......................................................
	// [ 成员变量 ] ......................................................
	// [ ******** ] ......................................................
public:
	BYTE m_Blue;  // [ 蓝色分量 ]
	BYTE m_Green; // [ 绿色分量 ]
	BYTE m_Red;   // [ 红色分量 ]

	// [ ************ ] ..................................................
	// [ 缺省构造函数 ] ..................................................
	// [ ************ ] ..................................................
public: 
	RGB_TRIPLE()                                  
	{
		m_Blue  = 0; // [ 蓝色分量 ]
		m_Green = 0; // [ 绿色分量 ]
		m_Red   = 0; // [ 红色分量 ]
	}

	// [ ************** ] ................................................
	// [ 初始化构造函数 ] ................................................
	// [ ************** ] ................................................
public:
	RGB_TRIPLE( BYTE red, BYTE green, BYTE blue ) 
	{
		m_Blue  = blue;  // [ 蓝色分量 ]
		m_Green = green; // [ 绿色分量 ]
		m_Red   = red;   // [ 红色分量 ]
	}
};

#endif // !defined(AFX_INCLUDE_H__E203256A_464F_4DD4_A7EF_DEE13B65543A__INCLUDED_)
